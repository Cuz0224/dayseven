{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cuzchen/Documents/cnode03/src/pages/index/list.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { List, Avatar, Tag, Col, Pagination } from \"antd\";\nconst tabSchema = {\n  all: '全部',\n  good: '精华',\n  share: '分享',\n  ask: '问答',\n  job: '招聘',\n  dev: '测试'\n};\n\nclass IndexList extends Component {\n  constructor(arg) {\n    super(arg);\n    let path = this.props.location.pathname.split(\"/\");\n    this.state = {\n      loading: this.props.loading,\n      data: this.props.data,\n      page: 1,\n      tab: path[path.length - 1]\n    };\n  }\n\n  componentDidMount() {\n    const {\n      tab,\n      page\n    } = this.state;\n    this.updata(tab, page);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let path = nextProps.location.pathname.split(\"/\");\n    let tab = path[path.length - 1];\n\n    if (tab !== this.state.tab) {\n      this.setState({\n        tab,\n        page: 1\n      });\n      this.updata(tab, 1);\n      return false;\n    }\n\n    this.setState({\n      loading: nextProps.loading,\n      data: nextProps.data\n    });\n  }\n\n  updata(tab, page) {\n    this.props.dispatch(function (dispatch, getState) {\n      dispatch({\n        type: \"TOPLIST_UPDATA\"\n      });\n      axios.get('https://cnodejs.org/api/v1/topics?tab=' + tab + '&limit=20&page=' + page).then(function (res) {\n        dispatch({\n          type: \"TOPLIST_SUCC\",\n          data: res\n        });\n      }).catch(function (res) {\n        dispatch({\n          type: \"TOPLIST_ERROR\"\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      data\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(Col, {\n      md: 18,\n      xs: 24,\n      className: \"indexList\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        loading: loading,\n        dataSource: data.data,\n        renderItem: item => {\n          return /*#__PURE__*/_jsxDEV(List.Item, {\n            actions: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: \"35px\"\n              },\n              children: [\"\\u56DE\\u590D\", item.reply_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u8BBF\\u95EE:\", item.visit_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 110\n            }, this)],\n            children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              style: {\n                minWidth: \"200px\"\n              },\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: item.author.avatar_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this),\n              title: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Tag, {\n                  color: item.top ? 'magenta' : item.good ? 'green' : 'geekblue',\n                  children: item.top ? '置顶' : item.good ? '精华' : tabSchema[item.tab] ? tabSchema[item.tab] : '分享'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/details/\" + item.id,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this),\n              description: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/user/\" + item.author.loginname,\n                  children: item.author.loginname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 48\n                }, this), \"\\u53D1\\u8868\\u4E8E:\", item.create_at.split(\"T\")[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), !loading && data.data.length > 0 ? /*#__PURE__*/_jsxDEV(Pagination, {\n        showQuickJumper: true,\n        defaultCurrent: this.state.page,\n        total: 500,\n        onChange: page => {\n          this.setState({\n            page\n          });\n          this.updata(this.state.tab, page);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default connect(state => state.topList)(IndexList);","map":{"version":3,"sources":["/Users/cuzchen/Documents/cnode03/src/pages/index/list.jsx"],"names":["React","Component","connect","Link","axios","List","Avatar","Tag","Col","Pagination","tabSchema","all","good","share","ask","job","dev","IndexList","constructor","arg","path","props","location","pathname","split","state","loading","data","page","tab","length","componentDidMount","updata","componentWillReceiveProps","nextProps","setState","dispatch","getState","type","get","then","res","catch","render","console","log","item","marginLeft","reply_count","visit_count","minWidth","author","avatar_url","top","id","title","loginname","create_at","topList"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {List, Avatar, Tag, Col, Pagination} from \"antd\";\nconst tabSchema = {\n    all: '全部',\n    good: '精华',\n    share: '分享',\n    ask: '问答',\n    job: '招聘',\n    dev: '测试',\n};\nclass IndexList extends Component{\n    constructor(arg){\n        super(arg);\n        let path = this.props.location.pathname.split(\"/\");\n        this.state = {\n            loading: this.props.loading,\n            data: this.props.data,\n            page: 1,\n            tab: path[path.length-1]\n        }\n    }\n    componentDidMount(){\n        const {tab,page} = this.state;\n        this.updata(tab,page);\n    }\n    componentWillReceiveProps(nextProps){\n        let path = nextProps.location.pathname.split(\"/\");\n        let tab = path[path.length-1];\n        if(tab !== this.state.tab){\n            this.setState({\n                tab,\n                page: 1\n            });\n            this.updata(tab,1);\n            return false;\n        }\n        this.setState({\n            loading: nextProps.loading,\n            data: nextProps.data\n        });\n    }\n    updata(tab,page){\n        this.props.dispatch(function(dispatch,getState){\n            dispatch({\n                type: \"TOPLIST_UPDATA\"\n            });\n            axios.get('https://cnodejs.org/api/v1/topics?tab='+tab+'&limit=20&page='+page)\n                .then(function(res){\n                    dispatch({\n                        type: \"TOPLIST_SUCC\",\n                        data: res\n                    });\n                })\n                .catch(function(res){\n                    dispatch({\n                        type: \"TOPLIST_ERROR\"\n                    });\n                })\n        });\n    }\n    render(){\n        const {loading,data} = this.state;\n        console.log(this.props);\n        return (<Col md={18} xs={24} className=\"indexList\">\n                <List\n                loading={loading}\n                dataSource = {data.data}\n                renderItem={(item)=>{\n                    return (\n                        <List.Item actions={[<span style={{marginLeft: \"35px\"}}>回复{item.reply_count}</span>, <span>访问:{item.visit_count}</span>]} key={item.id}>\n                        <List.Item.Meta\n                            style={{minWidth:\"200px\"}}\n                            avatar={<Avatar src={item.author.avatar_url} />}\n                            title={(<div>\n                                <Tag\n                                    color={\n                                        item.top ?\n                                            'magenta' :\n                                            item.good ?\n                                                'green' :\n                                                'geekblue'\n                                    }\n                                >\n                                    { item.top ? '置顶' : item.good ? '精华' : tabSchema[item.tab] ? tabSchema[item.tab] : '分享' }\n                                </Tag>\n                                <Link to={\"/details/\"+item.id}>{item.title}</Link>\n                            </div>)}\n                            description={<span><Link to={\"/user/\"+item.author.loginname}>{item.author.loginname}</Link>发表于:{item.create_at.split(\"T\")[0]}</span>}\n                        />\n                    </List.Item>)\n                }}\n            >\n            </List>\n            {(!loading&&data.data.length>0)?<Pagination showQuickJumper defaultCurrent={this.state.page} total={500} onChange={(page)=>{\n                this.setState({\n                    page\n                });\n                this.updata(this.state.tab,page);\n            }} />:\"\"}\n        </Col>);\n    }\n}\nexport default connect((state)=>(state.topList))(IndexList);"]},"metadata":{},"sourceType":"module"}